# The Shalldn *editor* requirements
* Implements **Shalldn editor**

## Project navigation

**Editor.NAV_RQ_DEF**  
The editor **shall** provide navigation to a requirement definition from any occurrence of *identifier* of the requirement in any text file of the Shalldn project.

**Editor.NAV_IMPL**
The editor**shall** provide navigation to an *implementation clause* from any occurrence of *identifier* of the clause in any text file of the Shalldn project.

**Editor.NAV_TERM_DEF**
The editor **shall** provide navigation to a term definition from any occurrence of the subject of the definition that is **separately bolded** or *separately italicized* in any shalldn file in the project.

## Problem indication

**Editor.PRBLM_PARSER**  
The editor **shall** indicate as problems all errors and warnings generated by the Shalldn parser for a file with name extension ".shalldn".

**Editor.ERR_MULT_DEF**  
The editor **shall** indicate an error problem for every requirement with *identifier* for which the Shalldn analyzer reported multiple text references to requirement definitions.

**Editor.ERR_NOIMPL**  
The editor **shall** indicate an error for every requirement for which there is no any *implementation clause* in the project when the document containing the requirement for which an *implementation clause* does exist.

**Editor.ERR_NOIMPL_DOC**  
The editor **shall** indicate an error for a shalldn document that only has requirements for which there is no any *implementation clause* in the project.

**Editor.CFG_NOIMP**  
The editor **shall** allow switching on and off mode for hiding errors for requirements without implementation.

**Editor.ERR_NO_IMPLMNT_TGT**  
The editor **shall** indicate an error for every *implementation clause* for which the Shalldn analyzer returns an empty list of requirement definitions with the *identifier* from the clause.

**Editor.CFG_PRJ_FTYPES**  
The editor **shall** allow configuring a set of file name extensions to select a non-requirement files included in project.

**Editor.ERR_DEMOTE**  
The editor **shall** allow reporting errors with reduced severity (as warnings) until the end of editing session.
* Rationale: In VS Code active errors prevents starting debug session. Demoting errors to warnings should not be permanent setting so that the user is reminded of actual scope of problems at least at start of session.
